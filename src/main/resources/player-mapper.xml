<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stackrating.db.PlayerMapper">

    <resultMap id="player" type="com.stackrating.model.Player">
        <constructor>
            <idArg column="id" javaType="_int" />
            <arg column="display_name" javaType="String" />
            <arg column="rep" javaType="_int" />
            <arg column="rating" javaType="_double" />
            <arg column="rep_pos" javaType="_int" />
            <arg column="rating_pos" javaType="_int" />
        </constructor>
    </resultMap>

    <resultMap id="player_state" type="com.stackrating.storage.RatingUpdater$PlayerStateTracker$PlayerState">
        <constructor>
            <idArg column="player_id" javaType="_int" />
            <arg column="num_games_played" javaType="_int" />
            <arg column="current_rating" javaType="_double" />
        </constructor>
    </resultMap>
    
    <select id="getPlayer" resultMap="player">
        SELECT
            id,
            TRIM(display_name) AS display_name,
            rep,
            rating,
            rep_pos,
            rating_pos
        FROM players
        WHERE id = #{id}
    </select>

    <select id="getNumPlayers" resultType="_int">
        SELECT COUNT(*)
        FROM players
    </select>

    <insert id="insertPlayer">
        INSERT INTO players(id, display_name, rep, rating, rep_pos, rating_pos)
        VALUES (#{id}, #{displayName}, #{rep}, 1500, -1, -1)
    </insert>

    <update id="updatePlayer">
        UPDATE players
        SET rating = #{rating}, display_name = #{displayName}
        WHERE id = #{id}
    </update>

    <update id="updateRating">
        UPDATE players
        SET rating = #{rating}
        WHERE id = #{playerId}
    </update>

    <update id="updateNameAndRep">
        UPDATE players
        SET name display_name = #{name}, rep = #{rep}
        WHERE id = #{playerId}
    </update>

    <select id="getPlayerStates" resultMap="player_state">
        SELECT
            player_id,
            1500 + SUM(rating_delta) AS current_rating,
            COUNT(*) AS num_games_played
        FROM
            entries
        WHERE
            game_id &lt; #{fromGameId}
            AND player_id IN
                <foreach item="id" collection="playerIds" open="(" separator="," close=")">
                    #{id}
                </foreach>
        GROUP BY player_id;
    </select>

    <update id="updateRatingPositions">
        UPDATE players
        SET rating_pos = players_with_actual_rating_pos.actual_rating_pos
        FROM players_with_actual_rating_pos
        WHERE players.id = players_with_actual_rating_pos.id
        AND players.id BETWEEN #{fromId} AND #{toId} - 1;    <!-- -1 since we want to be exclusive in the end -->
    </update>

    <update id="updateRepPositions">
        UPDATE players
        SET rep_pos = players_with_actual_rep_pos.actual_rep_pos
        FROM players_with_actual_rep_pos
        WHERE players.id = players_with_actual_rep_pos.id
        AND players.id BETWEEN #{fromId} AND #{toId} - 1;    <!-- -1 since we want to be exclusive in the end -->
    </update>

    <select id="getMaxPlayerId" resultType="_int">
        SELECT MAX(id)
        FROM players
    </select>

    <select id="getAllPlayerIds" resultType="int">
        SELECT id
        FROM players
        ORDER BY ${orderBy} DESC, id
    </select>

    <select id="getPlayers" resultMap="player">
        SELECT
            id,
            TRIM(display_name) AS display_name,
            rep,
            rating,
            rep_pos,
            rating_pos
        FROM
            players
        WHERE
            id IN
                <foreach item="id" collection="ids" open="(" separator="," close=")">
                    #{id}
                </foreach>
    </select>
    
    
</mapper>
